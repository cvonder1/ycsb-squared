plugins {
	id 'java'
	id "com.diffplug.spotless" version "6.18.0"
}

group 'de.claasklar'
version '1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_20
targetCompatibility = JavaVersion.VERSION_20

repositories {
	mavenCentral()
}

jar {
	manifest {
		attributes(Map.of('Main-Class', 'de.claasklar.Main'))
	}
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
}

dependencies {
	implementation platform('io.opentelemetry:opentelemetry-bom:1.26.0')

	implementation 'com.jayway.jsonpath:json-path:2.8.0'
	implementation 'io.opentelemetry:opentelemetry-api'
	implementation 'io.opentelemetry:opentelemetry-sdk'
	implementation 'io.opentelemetry:opentelemetry-exporter-otlp'
	implementation 'io.opentelemetry:opentelemetry-semconv:1.26.0-alpha'
	implementation 'io.opentelemetry:opentelemetry-exporter-prometheus:1.26.0-alpha'
	implementation 'org.slf4j:slf4j-api:2.0.7'
	implementation 'ch.qos.logback:logback-core:1.4.7'
	implementation 'ch.qos.logback:logback-classic:1.4.7'
	implementation 'org.mongodb:mongodb-driver-sync:4.9.1'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
	testImplementation 'org.assertj:assertj-core:3.24.2'
	testImplementation 'org.mockito:mockito-core:5.3.1'
}

test {
	useJUnitPlatform()
}

tasks.withType(JavaCompile).every {options ->
	options.options.compilerArgs.add('--enable-preview')
}

tasks.withType(Test).every {options ->
	options.jvmArgs(List.of('--enable-preview'))
}

tasks.withType(JavaExec).configureEach { options ->
	options.jvmArgs(List.of('--enable-preview'))
}

spotless {
	format('misc') {
		target '*.gradle', '*.md', '.gitignore'

		trimTrailingWhitespace()
		indentWithTabs()
		endWithNewline()
	}
	java {
		importOrder()
		removeUnusedImports()
		googleJavaFormat()
		formatAnnotations()
	}
}
